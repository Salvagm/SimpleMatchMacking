# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class User(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, selected_class: str=None):
        """
        User - a model defined in Swagger

        :param id: The id of this User.
        :type id: int
        :param name: The name of this User.
        :type name: str
        :param selected_class: The selected_class of this User.
        :type selected_class: str
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'selected_class': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'selected_class': 'selectedClass'
        }

        self._id = id
        self._name = name
        self._selected_class = selected_class

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The user of this User.
        :rtype: User
        """
        return deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """
        Gets the id of this User.

        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """
        Sets the id of this User.

        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """
        Gets the name of this User.

        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this User.

        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def selected_class(self) -> str:
        """
        Gets the selected_class of this User.

        :return: The selected_class of this User.
        :rtype: str
        """
        return self._selected_class

    @selected_class.setter
    def selected_class(self, selected_class: str):
        """
        Sets the selected_class of this User.

        :param selected_class: The selected_class of this User.
        :type selected_class: str
        """

        self._selected_class = selected_class

